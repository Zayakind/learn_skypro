from homework21_labirint.fields import Field, Cell
from homework21_labirint.hero import Ghost
from homework21_labirint.terrain import Grass, Wall, Trap, Key, Door


class GameController:
    """–ö–ª–∞—Å—Å –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –≤ —Å–µ–±–µ –≤—Å—é –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É"""

    def __init__(self):
        self.mapping = {
            'Wall': 'üî≤',
            'Grass': '‚¨ú',
            'Ghost': 'üëª',
            'Key': 'üóù',
            'Door': 'üö™',
            'Trap': 'üíÄ',
        }
        self.game_on = True
        self.hero = None
        self.field = None

    # –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç–∏—Ä—Ä–µ–π–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ lvlstring
    def _make_cell_terrain(self, name, *args, **kwargs):
        if name == 'W':
            return Cell(Wall())

        if name == 'g':
            return Cell(Grass())

        if name == 'T':
            return Cell(Trap())

        if name == 'G':
            self.hero = Ghost(25, *args, **kwargs)
            return Cell(Ghost(25, *args, **kwargs))

        if name == 'K':
            return Cell(Key())

        if name == 'D':
            return Cell(Door())

    # –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–∞—Ä—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª–∏
    def _draw_field(self):
        for cols in self.field.field:
            for rows in cols:
                print(f"{self.mapping.get(rows.get_obj().terrain)}", end=' ')
            print()

    # –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞—é—â–∏–π –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω –∫–∞—Ä—Ç—ã
    def _get_matrix(self, lvlstring):
        area = []
        for line in lvlstring.split("\n"):
            line = line.strip()
            cell_line = []
            for square in line:
                cell_line.append(square)
            area.append(cell_line)
        return area

    # –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
    def make_field(self, lvlstring):
        game_field = self._get_matrix(lvlstring)
        for cols in range(len(game_field)):
            for rows in range(len(game_field[cols])):
                coord = (cols, rows,)
                cell_obj = game_field[cols][rows]
                game_field[cols][rows] = self._make_cell_terrain(cell_obj, coord)
        self.field = Field(game_field, self.hero, self.hero.get_coordinates())
        self._draw_field()

    # –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–≥—Ä–æ–∫–æ–º
    def play(self):

        while self.game_on and not self.hero.escaped:
            print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è: "
                  "w - –≤–≤–µ—Ä—Ö, a - –≤–ª–µ–≤–æ, s - –≤–Ω–∏–∑, d - –≤–ø—Ä–∞–≤–æ\n"
                  "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥ - stop/exit")
            command = input()
            if command == 'stop' or command == 'exit':
                self.game_on = False
                break
            if command == 'w':
                self.field.move_unit_up()
                if not self.hero.is_alive():
                    self.game_on = False
                    break
                self._draw_field()
            if command == 'a':
                self.field.move_unit_left()
                if not self.hero.is_alive():
                    self.game_on = False
                    break
                self._draw_field()
            if command == 's':
                self.field.move_unit_down()
                if not self.hero.is_alive():
                    self.game_on = False
                    break
                self._draw_field()
            if command == 'd':
                self.field.move_unit_right()
                if not self.hero.is_alive():
                    self.game_on = False
                    break
                self._draw_field()
        else:
            print('Game Over')
